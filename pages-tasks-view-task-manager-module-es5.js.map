{"version":3,"sources":["webpack:///src/app/pages/tasks-view/details/details.component.ts","webpack:///src/app/pages/tasks-view/details/details.component.html","webpack:///src/app/pages/tasks-view/task-manager-routing.module.ts","webpack:///src/app/pages/tasks-view/task-manager.component.ts","webpack:///src/app/pages/tasks-view/task-manager.component.html","webpack:///src/app/pages/tasks-view/task-manager.module.ts","webpack:///src/app/pages/tasks-view/task/task.component.ts","webpack:///src/app/pages/tasks-view/task/task.component.html","webpack:///src/app/pipes/tasks.pipe.ts","webpack:///src/app/services/task-manager.service.ts"],"names":["$event","DetailsComponent","router","route","taskManagerService","index","id","isDisabled","onTaskDelete","onTaskCheckClick","Number","snapshot","params","getFromLocalStorage","localStorage","setItem","triggerEvent","action","task","status","isChecked","routeReuseStrategy","shouldReuseRoute","onSameUrlNavigation","navigate","relativeTo","JSON","parse","getItem","tasksFromLC","filter","field","value","title","capitalize","description","capitalizedValue","charAt","toUpperCase","slice","back","console","log","selector","templateUrl","styleUrls","changeDetection","OnPush","routes","path","component","TaskManagerRoutingModule","forChild","imports","exports","TaskFilterValue","TaskManagerComponent","tasks","all","getEvent","subscribe","param","undefined","onCheckClick","editTask","getDataFromLocalStorage","length","push","Date","now","stringify","splice","event","unfinished","completed","filterFromLocalStorage","dataFromStrage","onChange","addTask","clearInput","onFilterChange","TaskManagerModule","declarations","TaskComponent","onDetailsClick","emit","onCardClick","TasksPipe","allTasks","name","TaskManagerService","eventSubject","next","providedIn"],"mappings":"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","file":"pages-tasks-view-task-manager-module-es5.js","sourcesContent":["import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Task } from '../task/task.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DetailsComponent implements OnInit {\n  task: Task;\n  isChecked: boolean;\n  index: number = -1;\n  id: number = null;\n  isDisabled: boolean = true;\n  height: string;\n\n  @Output() onTaskDelete: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onTaskCheckClick: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private taskManagerService: TaskManagerService\n  ) {}\n\n  ngOnInit(): void {\n    this.id = Number(this.route.snapshot.params.id);\n    this.getFromLocalStorage();\n    localStorage.setItem('lastUrl', `task-manager/task/${this.id}`);\n  }\n\n  checkHandler(index: number): void {\n    this.taskManagerService.triggerEvent({ action: 'check', index });\n\n    if (this.task.status === 'completed') {\n      this.task.status = 'undone';\n      this.isChecked = false;\n    } else {\n      this.task.status = 'completed';\n      this.isChecked = true;\n    }\n\n    this.isDisabled = false;\n  }\n\n  resetPage(): void {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n    });\n  }\n\n  deleteHandler(index: number): void {\n    this.taskManagerService.triggerEvent({ action: 'delete', index });\n    this.router.navigate(['/task-manager']);\n  }\n\n  getFromLocalStorage(): void {\n    this.index = JSON.parse(localStorage.getItem('detailsIndex'));\n    let tasksFromLC = localStorage.getItem('tasks');\n    // console.log('Details init: tasks from LC', JSON.parse(tasksFromLC));\n    if (\n      tasksFromLC !== '' &&\n      tasksFromLC !== null &&\n      tasksFromLC !== 'undefined'\n    ) {\n      this.task = JSON.parse(tasksFromLC).filter(\n        (task) => task.id === this.id\n      )[0];\n\n      if (this.task.status === 'completed') {\n        this.isChecked = true;\n      } else {\n        this.isChecked = false;\n      }\n    }\n  }\n\n  back(): void {\n    this.router.navigate(['home/task-manager']);\n  }\n\n  onEdit(field: string, value: string) {\n    if (this.task.title === '') {\n      this.isDisabled = true;\n    } else {\n      this.isDisabled = false;\n    }\n    switch (field) {\n      case 'title':\n        this.task.title = this.capitalize(value);\n        break;\n      case 'description':\n        this.task.description = this.capitalize(value);\n        break;\n    }\n    // let capitalized = input.charAt(0).toUpperCase() + input.slice(1);\n  }\n\n  capitalize(value: string): string {\n    let capitalizedValue = value.charAt(0).toUpperCase() + value.slice(1);\n    return capitalizedValue;\n  }\n\n  saveHandler(): void {\n    if (this.task.title !== '') {\n      let index = Number(this.index);\n      this.taskManagerService.triggerEvent({\n        index,\n        action: 'edit',\n        title: this.task.title,\n        description: this.task.description,\n      });\n      this.back();\n    } else {\n      console.log('No empty title!');\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"btnDiv\" (click)=\"back()\">\n    <button class=\"button\">\n      <div class=\"button-box\">\n        <span class=\"button-elem\">\n          <svg viewBox=\"0 0 46 40\">\n            <path\n              d=\"M46 20.038c0-.7-.3-1.5-.8-2.1l-16-17c-1.1-1-3.2-1.4-4.4-.3-1.2 1.1-1.2 3.3 0 4.4l11.3 11.9H3c-1.7 0-3 1.3-3 3s1.3 3 3 3h33.1l-11.3 11.9c-1 1-1.2 3.3 0 4.4 1.2 1.1 3.3.8 4.4-.3l16-17c.5-.5.8-1.1.8-1.9z\"\n            ></path>\n          </svg>\n        </span>\n        <span class=\"button-elem\">\n          <svg viewBox=\"0 0 46 40\">\n            <path\n              d=\"M46 20.038c0-.7-.3-1.5-.8-2.1l-16-17c-1.1-1-3.2-1.4-4.4-.3-1.2 1.1-1.2 3.3 0 4.4l11.3 11.9H3c-1.7 0-3 1.3-3 3s1.3 3 3 3h33.1l-11.3 11.9c-1 1-1.2 3.3 0 4.4 1.2 1.1 3.3.8 4.4-.3l16-17c.5-.5.8-1.1.8-1.9z\"\n            ></path>\n          </svg>\n        </span>\n      </div>\n    </button>\n    <p>Back to task list</p>\n  </div>\n\n  <div class=\"form-container\">\n    <h2 class=\"title\" style=\"margin-bottom: 30px\">\n      Detailed view of task #{{ index === -1 ? \"\" : index + 1 }}\n    </h2>\n    <h2 *ngIf=\"index < 0\">No task</h2>\n\n    <div *ngIf=\"index > -1\">\n      <form class=\"form\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            [(ngModel)]=\"task.title\"\n            maxlength=\"43\"\n            (ngModelChange)=\"onEdit('title', $event)\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"textarea\">Description</label>\n          <textarea\n            name=\"textarea\"\n            id=\"textarea\"\n            rows=\"10\"\n            cols=\"50\"\n            required=\"\"\n            [(ngModel)]=\"task.description\"\n            (ngModelChange)=\"onEdit('description', $event)\"\n            maxlength=\"150\"\n          >\n          </textarea>\n        </div>\n\n        <div class=\"checkbox\">\n          <h3>Check if done:</h3>\n          <div class=\"checkboxx\">\n            <input\n              type=\"checkbox\"\n              id=\"checkbox\"\n              name=\"checkbox\"\n              [checked]=\"isChecked\"\n              (click)=\"checkHandler(this.index)\"\n            />\n          </div>\n        </div>\n\n        <div class=\"checkbox\">\n          <h3>Press to delete:</h3>\n          <button class=\"bin-button\" (click)=\"deleteHandler(this.index)\">\n            <svg class=\"bin-top\" viewBox=\"0 0 39 7\" fill=\"none\">\n              <line\n                y1=\"5\"\n                x2=\"39\"\n                y2=\"5\"\n                stroke=\"white\"\n                stroke-width=\"4\"\n              ></line>\n              <line\n                x1=\"12\"\n                y1=\"1.5\"\n                x2=\"26.0357\"\n                y2=\"1.5\"\n                stroke=\"white\"\n                stroke-width=\"3\"\n              ></line>\n            </svg>\n            <svg class=\"bin-bottom\" viewBox=\"0 0 33 39\" fill=\"none\">\n              <mask id=\"path-1-inside-1_8_19\" fill=\"white\">\n                <path\n                  d=\"M0 0H33V35C33 37.2091 31.2091 39 29 39H4C1.79086 39 0 37.2091 0 35V0Z\"\n                ></path>\n              </mask>\n              <path\n                d=\"M0 0H33H0ZM37 35C37 39.4183 33.4183 43 29 43H4C-0.418278 43 -4 39.4183 -4 35H4H29H37ZM4 43C-0.418278 43 -4 39.4183 -4 35V0H4V35V43ZM37 0V35C37 39.4183 33.4183 43 29 43V35V0H37Z\"\n                fill=\"white\"\n                mask=\"url(#path-1-inside-1_8_19)\"\n              ></path>\n              <path d=\"M12 6L12 29\" stroke=\"white\" stroke-width=\"4\"></path>\n              <path d=\"M21 6V29\" stroke=\"white\" stroke-width=\"4\"></path>\n            </svg>\n          </button>\n        </div>\n      </form>\n      <div class=\"checkbox\">\n        <button\n          class=\"form-submit-btn\"\n          [disabled]=\"isDisabled\"\n          type=\"submit\"\n          (click)=\"saveHandler()\"\n          [ngStyle]=\"{ 'background-color': isDisabled ? '#545b77' : '#59cca6' }\"\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskManagerComponent } from './task-manager.component';\nimport { DetailsComponent } from './details/details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskManagerComponent,\n  },\n  {\n    path: 'task/:id',\n    component: DetailsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskManagerRoutingModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Task } from './task/task.component';\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\n\nenum TaskFilterValue {\n  'all' = 1,\n  'unfinished' = 2,\n  'completed' = 3,\n}\n\n@Component({\n  selector: 'app-task-manager',\n  templateUrl: './task-manager.component.html',\n  styleUrls: ['./task-manager.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaskManagerComponent implements OnInit {\n  tasks: Task[] = [];\n  description: string = '';\n  title: string = '';\n  filter: TaskFilterValue = TaskFilterValue.all;\n  isDisabled: boolean = true;\n  // lastUrl: string;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private taskManagerService: TaskManagerService\n  ) {\n    this.taskManagerService.getEvent().subscribe((param: any) => {\n      if (param !== undefined) {\n        switch (param.action) {\n          case 'check':\n            this.onCheckClick(param.index);\n            param = undefined;\n            break;\n          case 'delete':\n            this.onTaskDelete(param.index);\n            param = undefined;\n            break;\n          case 'edit':\n            this.editTask(param);\n            break;\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    // localStorage.setItem('lastUrl', 'task-manager');\n    this.getDataFromLocalStorage();\n  }\n\n  onChange(field: string, value: string): void {\n    if (\n      this.title === '' ||\n      (this.title === `New task #${this.tasks.length + 1}` &&\n        this.description === '')\n    ) {\n      this.isDisabled = true;\n    } else {\n      this.isDisabled = false;\n    }\n\n    switch (field) {\n      case 'title':\n        this.title = this.capitalize(value);\n        break;\n      case 'description':\n        this.description = this.capitalize(value);\n        break;\n    }\n  }\n\n  addTask(): void {\n    if (this.title !== '') {\n      this.tasks.push({\n        id: Date.now(),\n        title: this.capitalize(this.title),\n        description: this.capitalize(this.description),\n        status: 'undone',\n      });\n      this.description = '';\n      this.title = `New task #${this.tasks.length + 1}`;\n      console.log(this.tasks);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    } else {\n      this.isDisabled = true;\n      console.log('No empty title!');\n    }\n  }\n\n  editTask(params: any): void {\n    if (this.tasks[0]) {\n      this.tasks[params.index].title = params.title;\n      this.tasks[params.index].description = params.description;\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n  }\n\n  onTaskDelete(index: number): void {\n    if (index != undefined && this.tasks.length > 0) {\n      this.tasks.splice(index, 1);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n  }\n\n  onCheckClick(index): void {\n    if (this.tasks[0]) {\n      if (index != undefined && this.tasks.length > 0) {\n        if (this.tasks[index].status === 'completed') {\n          this.tasks[index].status = 'undone';\n        } else {\n          this.tasks[index].status = 'completed';\n        }\n\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\n      }\n    }\n  }\n\n  onDetailsClick(index: number): void {\n    localStorage.setItem('detailsIndex', JSON.stringify(index));\n    this.router.navigate(['home/task-manager/task', this.tasks[index].id]);\n  }\n\n  clearInput(): void {\n    this.description = '';\n    this.title = '';\n  }\n\n  onFilterChange(event): void {\n    switch (event.value) {\n      case 'all':\n        this.filter = TaskFilterValue.all;\n        break;\n      case 'unfinished':\n        this.filter = TaskFilterValue.unfinished;\n        break;\n      case 'completed':\n        this.filter = TaskFilterValue.completed;\n        break;\n      default:\n    }\n  }\n\n  getDataFromLocalStorage(): void {\n    let filterFromLocalStorage = localStorage.getItem('filter');\n    if (\n      filterFromLocalStorage !== '' &&\n      filterFromLocalStorage !== null &&\n      filterFromLocalStorage !== 'undefined'\n    ) {\n      this.filter = JSON.parse(filterFromLocalStorage);\n    }\n\n    let dataFromStrage = localStorage.getItem('tasks');\n    if (\n      dataFromStrage !== '' &&\n      dataFromStrage !== null &&\n      typeof dataFromStrage !== 'undefined'\n    ) {\n      this.tasks = [...JSON.parse(dataFromStrage)];\n    }\n\n    // let lastUrl = localStorage.getItem('lastUrl');\n    // if (lastUrl) {\n    //   this.lastUrl = lastUrl;\n    // }\n\n    this.title = `New task #${this.tasks.length + 1}`;\n  }\n\n  resetPage(): void {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n    });\n  }\n\n  capitalize(value: string): string {\n    let capitalizedValue = value.charAt(0).toUpperCase() + value.slice(1);\n    return capitalizedValue;\n  }\n}\n","<div class=\"container\">\n  <div\n    class=\"col-md-7\"\n    style=\"\n      width: 100%;\n      height: fit-content;\n      min-height: 1000px;\n      overflow: hidden;\n      background-color: rgb(235, 240, 248);\n      border-bottom-left-radius: 20px;\n      border-bottom-right-radius: 20px;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-start;\n      padding: 30px;\n    \"\n  >\n    <div class=\"mat-app-background basic-container\">\n      <form class=\"example-form\">\n        <mat-form-field class=\"example-full-width\" style=\"margin-bottom: 20px\">\n          <mat-label>Title...</mat-label>\n          <input\n            class=\"message\"\n            matInput\n            #message1\n            maxlength=\"43\"\n            [(ngModel)]=\"title\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            style=\"font-size: 20px; height: 40px; font-weight: 600\"\n            (ngModelChange)=\"onChange('title', $event)\"\n          />\n\n          <mat-hint align=\"end\">{{ message1.value.length }} / 43</mat-hint>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Description...</mat-label>\n          <textarea\n            style=\"\n              font-size: 20px;\n              height: 95px;\n              margin-bottom: 0;\n              font-weight: 600;\n            \"\n            class=\"message\"\n            matInput\n            #message2\n            maxlength=\"165\"\n            [(ngModel)]=\"description\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            (ngModelChange)=\"onChange('description', $event)\"\n          ></textarea>\n\n          <mat-hint align=\"end\">{{ message2.value.length }} / 165</mat-hint>\n        </mat-form-field>\n\n        <div class=\"buttons\">\n          <button\n            class=\"add-btn\"\n            [disabled]=\"isDisabled\"\n            [style]=\"\n              isDisabled\n                ? 'background:#545b77;color:grey;'\n                : 'background:#58AD91'\n            \"\n            (click)=\"addTask()\"\n          >\n            Add\n          </button>\n          <button (click)=\"clearInput()\" class=\"add-btn\">Clear</button>\n        </div>\n      </form>\n      <hr />\n      <mat-button-toggle-group\n        name=\"fontStyle\"\n        aria-label=\"Font Style\"\n        (change)=\"onFilterChange($event)\"\n      >\n        <mat-button-toggle value=\"all\">All tasks</mat-button-toggle>\n        <mat-button-toggle value=\"unfinished\"\n          >Unfinished tasks</mat-button-toggle\n        >\n        <mat-button-toggle value=\"completed\">Completed tasks</mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n\n    <div class=\"tasks\">\n      <div *ngIf=\"tasks.length === 0\"><h2>No tasks</h2></div>\n      <app-task\n        *ngFor=\"let task of tasks | filter : filter; let index = id\"\n        [task]=\"task\"\n        [taskIndex]=\"tasks.indexOf(task)\"\n        (onTaskDelete)=\"onTaskDelete($event)\"\n        (onDetailsClick)=\"onDetailsClick($event)\"\n      ></app-task>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TaskManagerRoutingModule } from './task-manager-routing.module';\nimport { TaskManagerComponent } from './task-manager.component';\nimport { MaterialModule } from 'src/app/material-module';\nimport { TasksPipe } from 'src/app/pipes/tasks.pipe';\nimport { DetailsComponent } from './details/details.component';\nimport { TaskComponent } from './task/task.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    TaskManagerComponent,\n    TasksPipe,\n    DetailsComponent,\n    TaskComponent,\n  ],\n  imports: [\n    CommonModule,\n    TaskManagerRoutingModule,\n    MaterialModule,\n    FormsModule,\n  ],\n})\nexport class TaskManagerModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\n\nexport interface Task {\n  id: number;\n  title: string;\n  description: string;\n  status: 'completed' | 'undone';\n}\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaskComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private taskManagerService: TaskManagerService\n  ) {}\n\n  @Input() task: Task;\n  @Input() taskIndex: number;\n  @Output() onTaskDelete: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDetailsClick: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnInit(): void {}\n\n  onCheckClick(index: number): void {\n    this.taskManagerService.triggerEvent({ action: 'check', index });\n  }\n\n  onCardClick(index: number): void {\n    this.onDetailsClick.emit(index);\n  }\n}\n","<div class=\"card\">\n  <mat-card\n    style=\"\n      width: 730px;\n      height: 25px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      box-shadow: none;\n    \"\n  >\n    <div class=\"task\">\n      <p style=\"margin-right: 5px\">\n        {{ taskIndex + 1 }}\n      </p>\n      <div class=\"text\">\n        <h3 id=\"titleH3\"><span>TITLE:</span>{{ task.title }}</h3>\n        <h3 [style.color]=\"task.status === 'completed' ? 'grey' : 'black'\">\n          <span>DESCRIPTION:</span>{{ task.description }}\n        </h3>\n      </div>\n\n      <mat-checkbox\n        class=\"example-margin\"\n        color=\"primary\"\n        #checkbox\n        [checked]=\"task.status === 'completed' ? true : false\"\n        (change)=\"onCheckClick(this.taskIndex)\"\n        style=\"width: 24px; padding: 0; margin: 0\"\n      ></mat-checkbox>\n    </div>\n  </mat-card>\n  <button class=\"cta\" (click)=\"onCardClick(this.taskIndex)\">\n    <span class=\"hover-underline-animation\"> Details </span>\n  </button>\n\n  <button class=\"bin-button\" (click)=\"this.onTaskDelete.emit(this.taskIndex)\">\n    <svg class=\"bin-top\" viewBox=\"0 0 39 7\" fill=\"none\">\n      <line y1=\"5\" x2=\"39\" y2=\"5\" stroke=\"white\" stroke-width=\"4\"></line>\n      <line\n        x1=\"12\"\n        y1=\"1.5\"\n        x2=\"26.0357\"\n        y2=\"1.5\"\n        stroke=\"white\"\n        stroke-width=\"3\"\n      ></line>\n    </svg>\n    <svg class=\"bin-bottom\" viewBox=\"0 0 33 39\" fill=\"none\">\n      <mask id=\"path-1-inside-1_8_19\" fill=\"white\">\n        <path\n          d=\"M0 0H33V35C33 37.2091 31.2091 39 29 39H4C1.79086 39 0 37.2091 0 35V0Z\"\n        ></path>\n      </mask>\n      <path\n        d=\"M0 0H33H0ZM37 35C37 39.4183 33.4183 43 29 43H4C-0.418278 43 -4 39.4183 -4 35H4H29H37ZM4 43C-0.418278 43 -4 39.4183 -4 35V0H4V35V43ZM37 0V35C37 39.4183 33.4183 43 29 43V35V0H37Z\"\n        fill=\"white\"\n        mask=\"url(#path-1-inside-1_8_19)\"\n      ></path>\n      <path d=\"M12 6L12 29\" stroke=\"white\" stroke-width=\"4\"></path>\n      <path d=\"M21 6V29\" stroke=\"white\" stroke-width=\"4\"></path>\n    </svg>\n  </button>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Task } from '../pages/tasks-view/task/task.component';\r\n\r\nenum TaskFilterValue {\r\n  'all' = 1,\r\n  'unfinished' = 2,\r\n  'completed' = 3,\r\n}\r\n\r\n@Pipe({\r\n  name: 'filter',\r\n})\r\nexport class TasksPipe implements PipeTransform {\r\n  transform(allTasks: Task[], filter: TaskFilterValue): Task[] {\r\n    switch (filter) {\r\n      case TaskFilterValue.all:\r\n        return allTasks;\r\n      case TaskFilterValue.unfinished:\r\n        return allTasks.filter((task) => task.status === 'undone');\r\n      case TaskFilterValue.completed:\r\n        return allTasks.filter((task) => task.status === 'completed');\r\n\r\n      default:\r\n        return allTasks;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskManagerService {\n  constructor() {}\n\n  private eventSubject = new BehaviorSubject<any>(undefined);\n\n  triggerEvent(param: any): void {\n    console.log('triggered event', param);\n    this.eventSubject.next(param);\n  }\n\n  getEvent(): BehaviorSubject<any> {\n    return this.eventSubject;\n  }\n}\n"]}