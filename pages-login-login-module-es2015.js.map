{"version":3,"sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted: boolean = false;\n  valid: boolean = false;\n  inputType: string = 'password';\n  isDisabled: boolean = true;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      name: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern(/^[A-z0-9]*$/),\n          Validators.minLength(3),\n        ],\n      ],\n      email: [\n        null,\n        [\n          Validators.required,\n          Validators.email,\n          Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/),\n        ],\n      ],\n      password: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern(\n            /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\n          ),\n          Validators.minLength(8),\n        ],\n      ],\n    });\n  }\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      console.log('invalid');\n      return;\n    }\n    this.valid = true;\n    console.log('SUCCESS =>' + JSON.stringify(this.registerForm.value));\n    let capitalized =\n      this.registerForm.value.name.charAt(0).toUpperCase() +\n      this.registerForm.value.name.slice(1);\n    this.loginService.triggerEvent(capitalized);\n    this.login();\n  }\n\n  onFormChange(): void {\n    if (this.registerForm.invalid) {\n      console.log('invalid');\n      this.isDisabled = true;\n    } else {\n      this.isDisabled = false;\n    }\n  }\n\n  login(): void {\n    localStorage.setItem('token', Date.now().toString());\n\n    this.router.navigate(['home']);\n  }\n\n  passwordShowHide(): void {\n    if (this.inputType === 'password') {\n      this.inputType = 'text';\n    } else {\n      this.inputType = 'password';\n    }\n  }\n\n  resetPage(): void {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.navigate(['./'], {\n      relativeTo: this.route,\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"screen\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-field\">\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          required\n          formControlName=\"name\"\n          id=\"nameInput\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\n          class=\"form-control\"\n          (ngModelChange)=\"onFormChange()\"\n        />\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.name.errors.required\">Name is required</div>\n          <div *ngIf=\"f.name.errors.minlength\">\n            Name must be at least 3 characters\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-field\">\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          formControlName=\"email\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n          class=\"form-control\"\n          (ngModelChange)=\"onFormChange()\"\n        />\n        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.email.errors.required\">Email is required</div>\n          <div *ngIf=\"f.email.errors.email\">Must be a valid email address</div>\n        </div>\n      </div>\n\n      <div class=\"form-field\" id=\"passwordDiv\">\n        <input\n          [type]=\"inputType\"\n          placeholder=\"Password\"\n          id=\"password\"\n          required\n          formControlName=\"password\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n          class=\"form-control\"\n          (ngModelChange)=\"onFormChange()\"\n        />\n        <div\n          class=\"eye\"\n          (click)=\"passwordShowHide()\"\n          [style]=\"submitted && f.email.errors ? 'margin-right:20px' : ''\"\n        >\n          <img\n            [src]=\"\n              inputType === 'password'\n                ? '../../../assets/eye.svg'\n                : '../../../assets/eye-green.svg'\n            \"\n            alt=\"eye\"\n          />\n        </div>\n        <div class=\"invalid\" *ngIf=\"submitted && f.password.errors\">\n          <div *ngIf=\"f.password.errors.required\">Password is required</div>\n          <div\n            *ngIf=\"\n              (f.password.errors.pattern || !f.password.errors.minLength) &&\n              !f.password.errors.required\n            \"\n          >\n            At list 8 characters, 1 number and upper case letter, and 1 special\n            character\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-field\">\n        <button\n          class=\"loginBtn\"\n          [disabled]=\"isDisabled\"\n          [style]=\"isDisabled ? 'background-color:grey' : ''\"\n        >\n          <span>Login</span>\n          <svg width=\"34\" height=\"34\" viewBox=\"0 0 74 74\" fill=\"none\">\n            <circle\n              cx=\"37\"\n              cy=\"37\"\n              r=\"35.5\"\n              stroke=\"black\"\n              stroke-width=\"3\"\n            ></circle>\n            <path\n              d=\"M25 35.5C24.1716 35.5 23.5 36.1716 23.5 37C23.5 37.8284 24.1716 38.5 25 38.5V35.5ZM49.0607 38.0607C49.6464 37.4749 49.6464 36.5251 49.0607 35.9393L39.5147 26.3934C38.9289 25.8076 37.9792 25.8076 37.3934 26.3934C36.8076 26.9792 36.8076 27.9289 37.3934 28.5147L45.8787 37L37.3934 45.4853C36.8076 46.0711 36.8076 47.0208 37.3934 47.6066C37.9792 48.1924 38.9289 48.1924 39.5147 47.6066L49.0607 38.0607ZM25 38.5L48 38.5V35.5L25 35.5V38.5Z\"\n              fill=\"black\"\n            ></path>\n          </svg>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule, LoginRoutingModule, FormsModule, ReactiveFormsModule],\n})\nexport class LoginModule {}\n"],"sourceRoot":"webpack:///"}